var db = require('../database.js');
const UserModel = {};
var bcrypt = require('bcryptjs');

UserModel.accountAvailable = function(email, password) {

    let baseSQL = `SELECT * FROM users WHERE email='${email}' OR password='${password}';`;
    return db.execute(baseSQL)
    
.then(([results, fields])=>{

    return Promise.resolve(!(results == 0  && results.length == 0));

})
.catch((err) => Promise.reject(err));
}
UserModel.accountCreate = function(email, password) {
    return bcrypt.hash(password, 15)
    .then((hashedPassword)=>{
        let baseSQL = `INSERT INTO users VALUES (NULL,'${email}','${email}','${hashedPassword}');`;
        return db.execute(baseSQL)
    })  
    .then(([results, fields])=>{
        if (results && results.affectedRows) {
            return Promise.resolve(results.insertId);
        }   else {
            Promise.reject('The account was not created');
        }
})
.catch((err) => {
    console.log(err);
    Promise.reject(err)
});
}
UserModel.accountExists = function(email, password) {
    console.log("Account exists model reached");
    let baseSQL = `SELECT * FROM users WHERE email='${email}';`;
    return db.execute(baseSQL)
    
.then(([results, fields])=>{
    console.log("Account exists model query ran");
    if (results && results.length == 1){
        console.log(bcrypt.compare(password, results[0].password));
        return bcrypt.compare(password, results[0].password);

    } else {
        return 0;
    }

})
.catch((err) => Promise.reject(err));
}
module.exports = UserModel;
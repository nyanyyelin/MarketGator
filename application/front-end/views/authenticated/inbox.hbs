<!--
    Author: Patrick Celedio
    Purpose: For the user interface of the user message inbox
 -->

<div class="inbox-whole-page">
    <h1 style="text-align: center; margin-top: 25px; margin-bottom: 25px;">{{me}}'s Messages</h1>
    <div class="row">
        <div class="column top-left">
            {{> conversationcards}}
        </div>

        <!--
            @Patrick Celedio
            WHERE THE MESSAGES APPEAR ON THE UI 
            inbox.hbs will display partials
            message thread and send message form 
        -->
        <center id="message-flex">
        {{> message}}
        <center>
            <div>
                <div id="msg-container">
                    <div id="message-div">
                        <textarea style="color: black;" type="text" id ="message" class="form-control" placeholder="Send A Message."></textarea>
                        <button style="cursor: pointer" id="send-button" onclick="sendMessage({{idlisting}}, '{{reciever}}')" class="form-control">Send</button>
                    </div>
                    <br>
                </div>  
            </div>
        </center>     
        </center>
    </div>
</div>

<script>
    var objDiv = document.getElementById("message-flex");
    objDiv.scrollTop = objDiv.scrollHeight;

    function addFlashFromFrontEnd(message){
    let flashMessageDiv = document.createElement('div');
    let innerFlashDiv = document.createElement('div');
    let innerTextNode = document.createTextNode(message);
    innerFlashDiv.appendChild(innerTextNode);
    flashMessageDiv.appendChild(innerFlashDiv);
    flashMessageDiv.setAttribute('id', 'chatmessage');
    innerFlashDiv.setAttribute('class', 'alert alert-info');
    document.getElementsByTagName('body')[0].appendChild(flashMessageDiv);
    setFlashMessageFadeOut(flashMessageDiv);
    }

    function setFlashMessageFadeOut(flashMessageElement) {
    setTimeout(() => {
        let currentOpacity = 1.0;
        let timer = setInterval(() => {
            if(currentOpacity < 0.05){
                clearInterval(timer);
                flashMessageElement.remove();
            }
            currentOpacity = currentOpacity - 0.05;
            flashMessageElement.style.opacity = currentOpacity;
            
        }, 50)
    },4000);
    }       
    function addMessage(data) {
        let template = document.createElement('template');
        template.innerHTML = 
        `<div class="messages">
            <div id="message-${data.listing_idlisting}">
                <strong class="author-text" style="color: white; margin-right: 150px; margin-top: 20px;">${data.sender}</strong>
                <span class="date-posted" style="color: white; margin-left: 220px;">${new Date().toLocaleString()}</span>
                <div class="comment-text" style="color: white; font-size: larger; margin-top: 5px;">${data.message}</div>
            </div>
        </div>
        `;

        document.getElementById('message-flex').appendChild(template.content.firstChild);
        var objDiv = document.getElementById("message-flex");
        objDiv.scrollTop = objDiv.scrollHeight;
    }

    function sendMessage(listingId, recievername) {
    console.log('clicked')
    //console.log(parent.currentListing);
    let reciever = recievername;
    console.log(reciever)
    let commentText = document.getElementById('message').value;
    let listing_idlisting = listingId;
    console.log(commentText);
    let postId = listing_idlisting;
    console.log(postId);
    document.getElementById("message").value='';


    if(!commentText){
        return;
    }

    let fetchOptions = {
        method:"POST",
        headers: {
            "Content-Type":"Application/json"
        },
        body: JSON.stringify({
            reciever:reciever,
            message:commentText,
            listing_idlisting:listing_idlisting,
        })
    }
        fetch('/Messages/create', fetchOptions)
        .then((response) => response.json())
        .then((data) => {
            if(data.code == 1){
                addMessage(data);
            }else{
                addFlashFromFrontEnd("Error adding message")
            }
        })
        .catch(err => console.log(err));
    }
</script>